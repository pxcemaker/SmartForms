/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface ExampleComponent {
        "exampleProp": string;
        "exampleToUpperCase": () => Promise<void>;
    }
    interface ModalBox {
    }
    interface SfAddformbutton {
    }
    interface SfCheckbox {
    }
    interface SfImgselection {
    }
    interface SfMultiplechoice {
    }
    interface SfQuestion {
    }
    interface SfUploadbutton {
    }
}
declare global {
    interface HTMLExampleComponentElement extends Components.ExampleComponent, HTMLStencilElement {
    }
    var HTMLExampleComponentElement: {
        prototype: HTMLExampleComponentElement;
        new (): HTMLExampleComponentElement;
    };
    interface HTMLModalBoxElement extends Components.ModalBox, HTMLStencilElement {
    }
    var HTMLModalBoxElement: {
        prototype: HTMLModalBoxElement;
        new (): HTMLModalBoxElement;
    };
    interface HTMLSfAddformbuttonElement extends Components.SfAddformbutton, HTMLStencilElement {
    }
    var HTMLSfAddformbuttonElement: {
        prototype: HTMLSfAddformbuttonElement;
        new (): HTMLSfAddformbuttonElement;
    };
    interface HTMLSfCheckboxElement extends Components.SfCheckbox, HTMLStencilElement {
    }
    var HTMLSfCheckboxElement: {
        prototype: HTMLSfCheckboxElement;
        new (): HTMLSfCheckboxElement;
    };
    interface HTMLSfImgselectionElement extends Components.SfImgselection, HTMLStencilElement {
    }
    var HTMLSfImgselectionElement: {
        prototype: HTMLSfImgselectionElement;
        new (): HTMLSfImgselectionElement;
    };
    interface HTMLSfMultiplechoiceElement extends Components.SfMultiplechoice, HTMLStencilElement {
    }
    var HTMLSfMultiplechoiceElement: {
        prototype: HTMLSfMultiplechoiceElement;
        new (): HTMLSfMultiplechoiceElement;
    };
    interface HTMLSfQuestionElement extends Components.SfQuestion, HTMLStencilElement {
    }
    var HTMLSfQuestionElement: {
        prototype: HTMLSfQuestionElement;
        new (): HTMLSfQuestionElement;
    };
    interface HTMLSfUploadbuttonElement extends Components.SfUploadbutton, HTMLStencilElement {
    }
    var HTMLSfUploadbuttonElement: {
        prototype: HTMLSfUploadbuttonElement;
        new (): HTMLSfUploadbuttonElement;
    };
    interface HTMLElementTagNameMap {
        "example-component": HTMLExampleComponentElement;
        "modal-box": HTMLModalBoxElement;
        "sf-addformbutton": HTMLSfAddformbuttonElement;
        "sf-checkbox": HTMLSfCheckboxElement;
        "sf-imgselection": HTMLSfImgselectionElement;
        "sf-multiplechoice": HTMLSfMultiplechoiceElement;
        "sf-question": HTMLSfQuestionElement;
        "sf-uploadbutton": HTMLSfUploadbuttonElement;
    }
}
declare namespace LocalJSX {
    interface ExampleComponent {
        "exampleProp"?: string;
        "onExampleEvent"?: (event: CustomEvent<string>) => void;
    }
    interface ModalBox {
    }
    interface SfAddformbutton {
    }
    interface SfCheckbox {
    }
    interface SfImgselection {
    }
    interface SfMultiplechoice {
    }
    interface SfQuestion {
    }
    interface SfUploadbutton {
    }
    interface IntrinsicElements {
        "example-component": ExampleComponent;
        "modal-box": ModalBox;
        "sf-addformbutton": SfAddformbutton;
        "sf-checkbox": SfCheckbox;
        "sf-imgselection": SfImgselection;
        "sf-multiplechoice": SfMultiplechoice;
        "sf-question": SfQuestion;
        "sf-uploadbutton": SfUploadbutton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "example-component": LocalJSX.ExampleComponent & JSXBase.HTMLAttributes<HTMLExampleComponentElement>;
            "modal-box": LocalJSX.ModalBox & JSXBase.HTMLAttributes<HTMLModalBoxElement>;
            "sf-addformbutton": LocalJSX.SfAddformbutton & JSXBase.HTMLAttributes<HTMLSfAddformbuttonElement>;
            "sf-checkbox": LocalJSX.SfCheckbox & JSXBase.HTMLAttributes<HTMLSfCheckboxElement>;
            "sf-imgselection": LocalJSX.SfImgselection & JSXBase.HTMLAttributes<HTMLSfImgselectionElement>;
            "sf-multiplechoice": LocalJSX.SfMultiplechoice & JSXBase.HTMLAttributes<HTMLSfMultiplechoiceElement>;
            "sf-question": LocalJSX.SfQuestion & JSXBase.HTMLAttributes<HTMLSfQuestionElement>;
            "sf-uploadbutton": LocalJSX.SfUploadbutton & JSXBase.HTMLAttributes<HTMLSfUploadbuttonElement>;
        }
    }
}
