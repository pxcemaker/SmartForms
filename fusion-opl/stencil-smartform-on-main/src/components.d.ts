/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface ModalBox {
        "isOpen": boolean;
    }
    interface SfAddformbutton {
    }
    interface SfCheckbox {
    }
    interface SfImgselection {
    }
    interface SfInputText {
    }
    interface SfMultiplechoice {
    }
    interface SfQuestion {
    }
    interface SfQuestionContainer {
    }
    interface SfTextArea {
    }
    interface SfUploadbutton {
    }
}
declare global {
    interface HTMLModalBoxElement extends Components.ModalBox, HTMLStencilElement {
    }
    var HTMLModalBoxElement: {
        prototype: HTMLModalBoxElement;
        new (): HTMLModalBoxElement;
    };
    interface HTMLSfAddformbuttonElement extends Components.SfAddformbutton, HTMLStencilElement {
    }
    var HTMLSfAddformbuttonElement: {
        prototype: HTMLSfAddformbuttonElement;
        new (): HTMLSfAddformbuttonElement;
    };
    interface HTMLSfCheckboxElement extends Components.SfCheckbox, HTMLStencilElement {
    }
    var HTMLSfCheckboxElement: {
        prototype: HTMLSfCheckboxElement;
        new (): HTMLSfCheckboxElement;
    };
    interface HTMLSfImgselectionElement extends Components.SfImgselection, HTMLStencilElement {
    }
    var HTMLSfImgselectionElement: {
        prototype: HTMLSfImgselectionElement;
        new (): HTMLSfImgselectionElement;
    };
    interface HTMLSfInputTextElement extends Components.SfInputText, HTMLStencilElement {
    }
    var HTMLSfInputTextElement: {
        prototype: HTMLSfInputTextElement;
        new (): HTMLSfInputTextElement;
    };
    interface HTMLSfMultiplechoiceElement extends Components.SfMultiplechoice, HTMLStencilElement {
    }
    var HTMLSfMultiplechoiceElement: {
        prototype: HTMLSfMultiplechoiceElement;
        new (): HTMLSfMultiplechoiceElement;
    };
    interface HTMLSfQuestionElement extends Components.SfQuestion, HTMLStencilElement {
    }
    var HTMLSfQuestionElement: {
        prototype: HTMLSfQuestionElement;
        new (): HTMLSfQuestionElement;
    };
    interface HTMLSfQuestionContainerElement extends Components.SfQuestionContainer, HTMLStencilElement {
    }
    var HTMLSfQuestionContainerElement: {
        prototype: HTMLSfQuestionContainerElement;
        new (): HTMLSfQuestionContainerElement;
    };
    interface HTMLSfTextAreaElement extends Components.SfTextArea, HTMLStencilElement {
    }
    var HTMLSfTextAreaElement: {
        prototype: HTMLSfTextAreaElement;
        new (): HTMLSfTextAreaElement;
    };
    interface HTMLSfUploadbuttonElement extends Components.SfUploadbutton, HTMLStencilElement {
    }
    var HTMLSfUploadbuttonElement: {
        prototype: HTMLSfUploadbuttonElement;
        new (): HTMLSfUploadbuttonElement;
    };
    interface HTMLElementTagNameMap {
        "modal-box": HTMLModalBoxElement;
        "sf-addformbutton": HTMLSfAddformbuttonElement;
        "sf-checkbox": HTMLSfCheckboxElement;
        "sf-imgselection": HTMLSfImgselectionElement;
        "sf-input-text": HTMLSfInputTextElement;
        "sf-multiplechoice": HTMLSfMultiplechoiceElement;
        "sf-question": HTMLSfQuestionElement;
        "sf-question-container": HTMLSfQuestionContainerElement;
        "sf-text-area": HTMLSfTextAreaElement;
        "sf-uploadbutton": HTMLSfUploadbuttonElement;
    }
}
declare namespace LocalJSX {
    interface ModalBox {
        "isOpen"?: boolean;
    }
    interface SfAddformbutton {
    }
    interface SfCheckbox {
    }
    interface SfImgselection {
    }
    interface SfInputText {
    }
    interface SfMultiplechoice {
    }
    interface SfQuestion {
    }
    interface SfQuestionContainer {
    }
    interface SfTextArea {
    }
    interface SfUploadbutton {
    }
    interface IntrinsicElements {
        "modal-box": ModalBox;
        "sf-addformbutton": SfAddformbutton;
        "sf-checkbox": SfCheckbox;
        "sf-imgselection": SfImgselection;
        "sf-input-text": SfInputText;
        "sf-multiplechoice": SfMultiplechoice;
        "sf-question": SfQuestion;
        "sf-question-container": SfQuestionContainer;
        "sf-text-area": SfTextArea;
        "sf-uploadbutton": SfUploadbutton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "modal-box": LocalJSX.ModalBox & JSXBase.HTMLAttributes<HTMLModalBoxElement>;
            "sf-addformbutton": LocalJSX.SfAddformbutton & JSXBase.HTMLAttributes<HTMLSfAddformbuttonElement>;
            "sf-checkbox": LocalJSX.SfCheckbox & JSXBase.HTMLAttributes<HTMLSfCheckboxElement>;
            "sf-imgselection": LocalJSX.SfImgselection & JSXBase.HTMLAttributes<HTMLSfImgselectionElement>;
            "sf-input-text": LocalJSX.SfInputText & JSXBase.HTMLAttributes<HTMLSfInputTextElement>;
            "sf-multiplechoice": LocalJSX.SfMultiplechoice & JSXBase.HTMLAttributes<HTMLSfMultiplechoiceElement>;
            "sf-question": LocalJSX.SfQuestion & JSXBase.HTMLAttributes<HTMLSfQuestionElement>;
            "sf-question-container": LocalJSX.SfQuestionContainer & JSXBase.HTMLAttributes<HTMLSfQuestionContainerElement>;
            "sf-text-area": LocalJSX.SfTextArea & JSXBase.HTMLAttributes<HTMLSfTextAreaElement>;
            "sf-uploadbutton": LocalJSX.SfUploadbutton & JSXBase.HTMLAttributes<HTMLSfUploadbuttonElement>;
        }
    }
}
